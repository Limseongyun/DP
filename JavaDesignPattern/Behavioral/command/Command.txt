커맨드(Command)
요구사항을 객체로 캡슐화 할 수 있으며, 매개변수를 써서 여러가지 다른 요구사항을 집어넣을수도 있습니다.
또한 요청 내역을 큐에 저장하거나 로그로 기록할 수도 있으며, 작업취소 기능도 지원이 가능합니다.

커맨트 패턴은 식당의 주문 시스템으로 이해하면 쉽습니다.
1.자리에 앉아서 주문서를 적어서, 웨이터에게 전달합니다.
2.웨이터는 주방에 가서 손님에게 받은 주문서를 전달합니다.
3.주방장이 받은 주문대로 요리를 만듭니다.

주문서는 받은 주문을 캡슐화 하는 역할을 합니다.
웨이터는 주문서의 내용을 전혀 몰라도 됩니다. 그냥 이 주문서를 가져다가 주방에 가져다주고
주방장을 호출하면 됩니다.
즉, 주방장과 웨이터는 완전히 분리되어 있다는 것이죠

요리법에대한 정보는 모두 주방장에게 있고, 주방장은 받은 주문서에 적혀 있는 대로 요리를 하면 되니,
웨이터와 주방장이 직접 대면해서 무언가를 할 필요가 없습니다.

